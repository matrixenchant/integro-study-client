import React, { useEffect, useState } from 'react';

const _weeks = [
  {
    title: 'Неделя №1',
    info: [
      'Идея стартапа: поиск и анализ',
      'Исследование целевой аудитории',
      'Анализ рынка и конкурентов',
      'Формулирование цели и миссии',
      'Выбор бизнес-модели',
    ],
  },
  {
    title: 'Неделя №2',
    info: [
      'Разработка бизнес-плана',
      'Финансовое моделирование',
      'Оценка рисков и стратегии их управления',
      'Поиск потенциальных инвесторов',
      'Подготовка элеваторного питча',
    ],
  },
  {
    title: 'Неделя №3',
    info: [
      'Легальные аспекты и регистрация стартапа',
      'Выбор команды и распределение обязанностей',
      'Управление временем и ресурсами',
      'Построение эффективной коммуникации внутри команды',
      'Формирование корпоративной культуры',
    ],
  },
  {
    title: 'Неделя №4',
    info: [
      'Прототипирование продукта или услуги',
      'Тестирование концепции на реальных пользователях',
      'Итерационная разработка',
      'Получение обратной связи и ее анализ',
      'Внесение корректив в продукт',
    ],
  },
  {
    title: 'Неделя №5',
    info: [
      'Маркетинг и продвижение',
      'Создание стратегии привлечения клиентов',
      'Использование социальных сетей и медиа',
      'Партнерские отношения и реклама',
      'Анализ эффективности маркетинговых кампаний',
    ],
  },
  {
    title: 'Неделя №6',
    info: [
      'Управление ростом и масштабирование',
      'Оптимизация бизнес-процессов',
      'Развитие инфраструктуры',
      'Формирование долгосрочной стратегии',
      'Оптимизация структуры компании для роста',
    ],
  },
];

const Help = () => {
  const [weeks, setWeeks] = useState(_weeks);
  const [search, setSearch] = useState('');

  useEffect(() => {
    document.querySelector('.app-help-wrap')?.scrollTo(0, 99999);
  }, []);

  const filter = weeks.filter(x => {
    const all = `${x.title} ${x.info.join(' ')}`.toLowerCase();
    return all.includes(search.toLowerCase());
  })

  return (
    <div className="app-help">
      <div className="app-help-search">
        <input
          type="text"
          value={search}
          onChange={(e) => setSearch(e.target.value)}
          placeholder="Поиск"
        />
        <svg
          width="24"
          height="24"
          viewBox="0 0 24 24"
          fill="none"
          xmlns="http://www.w3.org/2000/svg">
          <path
            d="M23.561 21.4452L18.9159 16.7981C22.3916 12.1533 21.4439 5.57034 16.7991 2.09462C12.1543 -1.3811 5.57132 -0.433388 2.09559 4.21139C-1.38013 8.85616 -0.432411 15.4392 4.21236 18.9149C7.94343 21.7069 13.068 21.7069 16.7991 18.9149L21.4462 23.562C22.0302 24.146 22.977 24.146 23.561 23.562C24.1449 22.978 24.1449 22.0312 23.561 21.4472L23.561 21.4452ZM10.5445 18.0179C6.4164 18.0179 3.06998 14.6715 3.06998 10.5435C3.06998 6.41542 6.4164 3.06901 10.5445 3.06901C14.6725 3.06901 18.0189 6.41542 18.0189 10.5435C18.0145 14.6697 14.6707 18.0136 10.5445 18.0179Z"
            fill="black"
          />
        </svg>
      </div>
      <div className="app-help-wrap">
        {filter.map((w) => (
          <div className="app-help-item" key={w.title}>
            <h2>{w.title}</h2>
            <ul>
                {w.info.map((text, i) => <li key={text}><span>{i + 1}.</span>{text}</li>)}
            </ul>
          </div>
        ))}
      </div>
    </div>
  );
};

export default Help;
